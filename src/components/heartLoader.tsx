'use client'

import { useEffect, useState } from 'react'
import { usePulse } from './usePulse'

export default function HeartLoader({ pulseKey }: { pulseKey: number }) {
	const [state, setState] = useState(true)
	const { subscribe, unsubscribe } = usePulse(1200, 600)
	const loaderFill = '#FEF'
	const loaderClass = 'absolute top-0 animate-[dropShadow_1s_infinite]'

	function onPulse() {
		setState(prev => !prev)
	}

	useEffect(() => {
		subscribe(pulseKey, onPulse)
		return () => {
			unsubscribe(pulseKey)
		}
	}, [])

	return (
		<div className="relative w-full animate-[flicker_2s_ease_infinite]">
			<svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="-32 18 534 438" className="py-4">
				{state ? (
					<path
						fill={loaderFill}
						className={loaderClass}
						d="M433.601,67.001c-24.7-24.7-57.4-38.2-92.3-38.2s-67.7,13.6-92.4,38.3l-12.9,12.9l-13.1-13.1
		c-24.7-24.7-57.6-38.4-92.5-38.4c-34.8,0-67.6,13.6-92.2,38.2c-24.7,24.7-38.3,57.5-38.2,92.4c0,34.9,13.7,67.6,38.4,92.3
		l187.8,187.8c2.6,2.6,6.1,4,9.5,4c3.4,0,6.9-1.3,9.5-3.9l188.2-187.5c24.7-24.7,38.3-57.5,38.3-92.4
		C471.801,124.501,458.301,91.701,433.601,67.001z M414.401,232.701l-178.7,178l-178.3-178.3c-19.6-19.6-30.4-45.6-30.4-73.3
		s10.7-53.7,30.3-73.2c19.5-19.5,45.5-30.3,73.1-30.3c27.7,0,53.8,10.8,73.4,30.4l22.6,22.6c5.3,5.3,13.8,5.3,19.1,0l22.4-22.4
		c19.6-19.6,45.7-30.4,73.3-30.4c27.6,0,53.6,10.8,73.2,30.3c19.6,19.6,30.3,45.6,30.3,73.3
		C444.801,187.101,434.001,213.101,414.401,232.701z"
					/>
				) : (
					<path
						fill={loaderFill}
						className={loaderClass}
						transform="translate(-32.5, 19.5)"
						d="m 252.03825,162.6719
c 0,0 8.70885,-14.37526 9.23255,-23.32696 0.73293,-12.52793 -14.67021,-40.337749 -28.36721,-55.551334 0,0 -30.01491,-42.597522 -109.80128,-41.242714
C 89.499777,43.121478 53.447881,62.416843 33.099213,89.15101 12.667829,115.99386 3.910061,149.1475 8.535315,182.53273
c 4.529556,33.39819 21.884039,62.91296 48.726887,83.34436
L 261.35479,421.22183
c 2.82555,2.15063 6.35665,3.03616 9.61032,2.59488 3.25371,-0.44126 6.46605,-3.13848 9.32521,-5.2443
L 472.50034,268.79773
c 27.16184,-20.00536 44.89881,-49.35263 49.95475,-82.6752 5.15154,-33.30807 -2.98679,-66.58129 -22.99207,-93.74316
C 479.45765,65.217528 450.19135,47.590516 416.86879,42.534614 383.54621,37.478695 338.59665,54.073713 326.31686,61.966259 314.27021,69.708933 311.04995,78.095195 314.00303,93.6831
l 11.51876,60.80246 -42.16859,45.29544
c -4.50045,4.83417 -12.19949,13.25105 -10.73828,26.53119
l 5.62233,51.09873 -63.81245,-53.58101
m -23.97953,-10.45793
c 0,0 -11.16925,14.76055 3.88205,27.31168
l 72.32585,60.31187
c 0,0 15.17122,9.8689 27.00479,2.33216 11.83353,-7.53676 9.17851,-22.18172 9.17851,-22.18172
l -4.96484,-58.66029 47.77326,-49.8189
c 4.11677,-4.29304 8.08395,-10.55513 7.0164,-16.40649
L 340.24911,88.22785
c -2.03159,-11.1354 49.58238,-24.319815 72.61276,-19.928086 26.18233,4.992778 49.61273,18.076806 65.50194,39.534846 15.87465,21.55356 22.32449,47.92846 18.31164,74.37647 -3.91723,26.4625 -17.99585,49.72276 -39.54934,65.59745
L 266.74704,392.7152 72.978655,245.22876
C 51.678255,229.01598 37.968549,205.53653 34.373459,179.02849 30.778365,152.52045 37.643477,126.25056 53.869205,105.04588 69.999254,83.85414 93.45557,69.969287 119.89105,66.562317
c 10.94894,-1.411094 63.90952,-1.242979 92.39978,32.512632 9.72285,11.519751 24.31242,38.132031 24.31242,38.132031"
					/>
				)}
			</svg>
		</div>
	)
}
